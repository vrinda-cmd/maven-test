<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-12T12:02:01Z" name="Default suite" finished-at="2022-11-12T12:05:06Z" duration-ms="185317">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunnerClass@2c22a348]" name="feature" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-11-12T12:02:01Z" name="Default test" finished-at="2022-11-12T12:05:06Z" duration-ms="185317">
      <class name="Runner.RunnerClass">
        <test-method is-config="true" signature="setup()[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:01:57Z" name="setup" finished-at="2022-11-12T12:02:01Z" duration-ms="3362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:02:01Z" name="setUpClass" finished-at="2022-11-12T12:02:01Z" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:02:01Z" name="startTest" finished-at="2022-11-12T12:02:01Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:02:01Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-11-12T12:02:51Z" duration-ms="50500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[To test the features of the animation present in the app]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:02:51Z" name="endTest" finished-at="2022-11-12T12:02:51Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="atestCaseResult(org.testng.ITestResult)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:02:51Z" name="atestCaseResult" finished-at="2022-11-12T12:02:51Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunnerClass@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atestCaseResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:02:51Z" name="startTest" finished-at="2022-11-12T12:02:51Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:02:51Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-11-12T12:04:02Z" duration-ms="70664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[To test the features of the app button present in the app]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="atestCaseResult(org.testng.ITestResult)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:04:02Z" name="atestCaseResult" finished-at="2022-11-12T12:04:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunnerClass@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atestCaseResult -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:04:02Z" name="endTest" finished-at="2022-11-12T12:04:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:04:02Z" name="startTest" finished-at="2022-11-12T12:04:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:04:02Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-11-12T12:04:47Z" duration-ms="44373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[To test the features of the media button present in the app]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="atestCaseResult(org.testng.ITestResult)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:04:47Z" name="atestCaseResult" finished-at="2022-11-12T12:04:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunnerClass@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atestCaseResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:04:47Z" name="startTest" finished-at="2022-11-12T12:04:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:04:47Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-11-12T12:05:06Z" duration-ms="19544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[To test the features of the text button present in the app]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:04:47Z" name="endTest" finished-at="2022-11-12T12:04:47Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="atestCaseResult(org.testng.ITestResult)[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:05:06Z" name="atestCaseResult" finished-at="2022-11-12T12:05:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunnerClass@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atestCaseResult -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:05:06Z" name="endTest" finished-at="2022-11-12T12:05:06Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:05:06Z" name="tearDownClass" finished-at="2022-11-12T12:05:06Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="Teardown()[pri:0, instance:Runner.RunnerClass@2c22a348]" started-at="2022-11-12T12:05:06Z" name="Teardown" finished-at="2022-11-12T12:05:06Z" duration-ms="318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Teardown -->
      </class> <!-- Runner.RunnerClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
